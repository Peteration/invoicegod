import { compile } from 'handlebars';
import { readFileSync } from 'fs';
import path from 'path';
import puppeteer from 'puppeteer-core';
import chromium from '@sparticuz/chromium';
import { sanitizeHtml } from '../../lib/security';

// Pre-compiled templates
const TEMPLATES = {
  standard: compile(
    readFileSync(path.join(process.cwd(), 'templates/standard.hbs'), 'utf-8'
  ),
  minimal: compile(
    readFileSync(path.join(process.cwd(), 'templates/minimal.hbs'), 'utf-8')
};

export async function generateSecurePDF(invoiceData: any, templateName = 'standard') {
  // Input validation
  if (!TEMPLATES[templateName]) throw new Error('Invalid template');
  
  // Sanitize all user inputs
  const safeData = {
    ...invoiceData,
    items: invoiceData.items.map((item: any) => ({
      description: sanitizeHtml(item.description),
      amount: Number(item.amount).toFixed(2)
    }))
  };

  // Generate HTML with CSP nonce
  const nonce = crypto.randomBytes(16).toString('hex');
  const html = TEMPLATES[templateName]({
    ...safeData,
    cspNonce: nonce,
    watermark: invoiceData.paid ? '' : 'UNPAID - invoicegod.com'
  });

  // Launch secure browser instance
  const browser = await puppeteer.launch({
    executablePath: await chromium.executablePath(),
    args: chromium.args,
    defaultViewport: chromium.defaultViewport,
    headless: chromium.headless,
    ignoreHTTPSErrors: true,
  });

  try {
    const page = await browser.newPage();
    
    // Set strict content security policy
    await page.setExtraHTTPHeaders({
      'Content-Security-Policy': `default-src 'none'; style-src 'nonce-${nonce}'; img-src data:; font-src data:`
    });

    await page.setContent(html, {
      waitUntil: 'networkidle0',
      timeout: 5000
    });

    // Generate PDF with anti-tampering features
    const pdf = await page.pdf({
      format: 'A4',
      margin: { top: '20mm', right: '20mm', bottom: '20mm', left: '20mm' },
      printBackground: true,
      preferCSSPageSize: true,
      displayHeaderFooter: true,
      headerTemplate: `<div style="font-size:8px;width:100%;text-align:center;padding-top:5mm;">Generated by InvoiceGod</div>`,
      footerTemplate: `<div style="font-size:8px;width:100%;text-align:center;padding-bottom:5mm;">Page <span class="pageNumber"></span> of <span class="totalPages"></span></div>`
    });

    return pdf;
  } finally {
    await browser.close();
  }
}